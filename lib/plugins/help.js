// Generated by CoffeeScript 2.4.1
// ## Plugin "help"

// Dependecies
var Parameters, merge, path;

path = require('path');

// Parameters & plugins
Parameters = require('../Parameters');

({merge} = require('mixme'));

require('../plugins/config');

Parameters.prototype.init = (function(parent) {
  return function() {
    this.register({
      configure_app_set: function({config, command}, handler) {
        if (config.commands == null) {
          config.commands = {};
        }
        // No "help" option for command "help"
        if (!command.length || !config.help) {
          if (config.options == null) {
            config.options = {};
          }
          config.options['help'] = merge(config.options['help'], {
            name: 'help',
            cascade: true,
            shortcut: 'h',
            description: 'Display help information',
            type: 'boolean',
            help: true
          });
        }
        // config.shortcuts[config.options['help'].shortcut] = config.options['help'].name if config.options['help'].shortcut
        if (!command.length && Object.keys(config.commands).length) {
          command = {
            name: 'help',
            description: "Display help information",
            // description: "Display help information about #{config.name}"
            // command: ['help']
            main: {
              name: 'name',
              description: 'Help about a specific command'
            },
            help: true,
            route: path.resolve(__dirname, '../routes/help'), // config.help.route
            options: {
              'help': {
                disabled: true
              }
            }
          };
          config.commands[command.name] = merge(command, config.commands[command.name]);
        }
        return function() {
          handler.call(this, ...arguments);
          return config.description != null ? config.description : config.description = `No description yet for the ${config.name} command`;
        };
      }
    });
    this.register({
      configure_commands_set: function({config, command}, handler) {
        return function() {          // No "help" option for command "help"
          // if not command.length or not config.help
          //   console.log '!!!!!!!!!!', not command.length
          //   config.options ?= {}
          //   config.options['help'] = merge config.options['help'],
          //     name: 'help'
          //     shortcut: 'h'
          //     description: 'Display help information'
          //     type: 'boolean'
          //     help: true
          // config.shortcuts[config.options['help'].shortcut] = config.options['help'].name if config.options['help'].shortcut
          handler.call(this, ...arguments);
          return config.description != null ? config.description : config.description = `No description yet for the ${config.name} command`;
        };
      }
    });
    return parent.call(this, ...arguments);
  };
})(Parameters.prototype.init);
